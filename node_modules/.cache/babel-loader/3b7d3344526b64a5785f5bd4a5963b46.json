{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\schub\\\\Desktop\\\\calcPi\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\schub\\\\Desktop\\\\calcPi\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\schub\\\\Desktop\\\\calcPi\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\schub\\\\Desktop\\\\calcPi\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\schub\\\\Desktop\\\\calcPi\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\schub\\\\Desktop\\\\calcPi\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport { Stage, Layer, Circle, Text } from 'react-konva';\nimport Konva from 'konva';\nimport ColoredRect from './ColoredRect';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: \"\",\n      pi: 0,\n      points: [],\n      konvaPoints: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var val = event.target.value;\n      this.setState({\n        value: val\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var val = this.state.value;\n\n      if (!Number(val)) {\n        alert(\"The value must be a number\");\n      } else {\n        this.calculatePi(val);\n      }\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.random() * (max - min) + min;\n    }\n  }, {\n    key: \"calculatePi\",\n    value: function calculatePi(n) {\n      var _this2 = this;\n\n      n = parseInt(n, 10);\n      var numPointsInCircle = 0;\n      var numPointsTotal = 0;\n      var x = 0;\n      var y = 0;\n\n      for (var i = 0; i < n; i++) {\n        x = this.getRandomArbitrary(-1, 1);\n        y = this.getRandomArbitrary(-1, 1);\n        this.state.points.push([x, y]);\n\n        if (Math.pow(x, 2) + Math.pow(y, 2) <= 1) {\n          numPointsInCircle++;\n        }\n\n        numPointsTotal++;\n      }\n\n      var pi = 4 * numPointsInCircle / numPointsTotal;\n      var rad = 750 / 2;\n      var key = 0;\n      this.setState({\n        pi: pi\n      });\n      this.setState({\n        konvaPoints: this.state.points.map(function (el) {\n          return /*#__PURE__*/React.createElement(Circle, {\n            key: key++,\n            x: el[0] * rad + 20 + rad,\n            y: el[1] * rad + 20 + rad,\n            radius: 1,\n            stroke: \"black\",\n            fill: \"black\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }\n          });\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, \"Hello \", this.props.name), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n        id: \"piInput\",\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"Value of Pi: \", this.state.pi), /*#__PURE__*/React.createElement(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ColoredRect, {\n        points: this.state.points,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Layer, {\n        destroyChildren: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, this.state.konvaPoints)));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/schub/Desktop/calcPi/src/App.js"],"names":["React","Stage","Layer","Circle","Text","Konva","ColoredRect","App","props","state","value","pi","points","konvaPoints","handleChange","bind","handleSubmit","event","val","target","setState","preventDefault","Number","alert","calculatePi","min","max","Math","random","n","parseInt","numPointsInCircle","numPointsTotal","x","y","i","getRandomArbitrary","push","rad","key","map","el","name","window","innerWidth","innerHeight","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport { Stage, Layer, Circle, Text } from 'react-konva';\nimport Konva from 'konva';\nimport ColoredRect from './ColoredRect'\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", pi: 0, points: [], konvaPoints: \"\"};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let val = event.target.value;\n    this.setState({ value: val });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let val = this.state.value;\n    if (!Number(val)) {\n      alert(\"The value must be a number\");\n    }\n    else {\n      this.calculatePi(val);\n    }\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  calculatePi(n) {\n    n = parseInt(n,10);\n    let numPointsInCircle = 0;\n    let numPointsTotal = 0;\n    let x = 0;\n    let y = 0;\n    for (var i = 0; i < n; i++) {\n      x = this.getRandomArbitrary(-1, 1);\n      y = this.getRandomArbitrary(-1, 1);\n      this.state.points.push([x, y]);\n      if (x ** 2 + y ** 2 <= 1) {\n        numPointsInCircle++;\n      }\n      numPointsTotal++;\n    }\n    let pi = (4 * numPointsInCircle) / numPointsTotal;\n    let rad = 750/2;\n    let key = 0;\n    this.setState({ pi: pi });\n    this.setState({konvaPoints: this.state.points.map(el => {\n      return (\n          <Circle key={key++} x={(el[0]*rad)+20+rad} y={((el[1]*rad)+20+rad)} radius={1} stroke=\"black\" fill=\"black\" />\n      )\n    })})\n  }\n\n \n\n\n  render() {\n    \n  \n    return (\n      <div>\n        <h1>Hello {this.props.name}</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input\n              id=\"piInput\"\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <h2>Value of Pi: {this.state.pi}</h2>\n        <Stage width={window.innerWidth} height={window.innerHeight}>\n          <ColoredRect points={this.state.points}/>\n          <Layer destroyChildren=\"true\">\n            {this.state.konvaPoints}\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}